#!/usr/bin/env node
/* eslint-disable no-console */

const http = require('http');
const database = require('../src/database');

function onError(error) {
  console.error(`Failed to start server:\n${error.stack}`);
  process.exit(1);
}

async function main() {
  try {
    await database.connect();
    console.log('connected to database');

    const app = require('../src/api');
    const port = Number(process.env.PORT || '3001');
    app.set('port', port);
    const server = http.createServer(app);

    server.listen(port);

    server.on('error', onError);

    server.on('listening', () => {
      const addr = server.address();
      const bind = typeof addr === 'string'
        ? `pipe ${addr}`
        : `port ${addr.port}`;

      console.log(`Listening on ${bind}`);
    });
  } catch (error) {
    onError(error);
  }
}

main();

process.on('uncaughtException', (err) => {
  // eslint-disable-next-line no-console
  console.error('Uncaught exception: ', err);
});